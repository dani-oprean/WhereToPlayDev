@model WhereToPlay.Models.DB.Court



@using (Html.BeginForm("Rent", "Courts", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div>
            <p>@Html.DisplayFor(model => model.CourtName) / @Html.DisplayFor(model => model.Sport.SportName)</p>
            <p>@Html.HiddenFor(model=>model.IDCourt)</p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Address)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Address.AddressStreet)
                    @Html.DisplayFor(model => model.Address.AddressNumber)
                    @Html.DisplayFor(model => model.Address.AddressCity)
                    @Html.DisplayFor(model => model.Address.AddressCounty)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.User.UserName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.User.UserName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Length)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Length)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Width)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Width)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.PhoneNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EmailAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EmailAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.SessionPrice)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.SessionPrice)
                </dd>

           </dl>
    </div>

    <div>
        @{
            if (Model.FileName1 != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.Content1);
                string imageSrc = string.Format("data:image/jpeg;base64,{0}", imageBase64);
                <img src="@imageSrc" style="height:200px;width:300px;" />
            }
        }
    </div>

    <div>
        @{
            if (Model.FileName2 != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.Content2);
                string imageSrc = string.Format("data:image/jpeg;base64,{0}", imageBase64);
                <img src="@imageSrc" style="height:200px;width:300px;" />
            }
        }
    </div>

    <div>
        @{
            if (Model.FileName3 != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.Content3);
                string imageSrc = string.Format("data:image/jpeg;base64,{0}", imageBase64);
                <img src="@imageSrc" style="height:200px;width:300px;" />
            }
        }
    </div>

    <hr />

    
        <dl class="dl-horizontal">

            <dt>
                @Html.Label("", "Selecteaza data")
            </dt>

            <dd>
                @*<div id="selectedDate" name="selectedDate" class="date-picker"></div>*@
                @Html.TextBox("selectedDate", "",new { @class = "date-picker" })
            </dd>

            <dt>
                @Html.Label("","Ora rezervare")
            </dt>

            <dd>
                @Html.Partial("CourtReservationTime",
                new WhereToPlay.Models.ViewModel.CourtReservation
                {
                    NZeceDoispe = false, NDoispePaispe = false, NPaispeSaispe=false,
                    NSaispeOptspe =false, NOptspeDouazeci=false,NDouazeciDouajdoi=false
                })
            </dd>
        </dl>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Rezerva" class="btn btn-default" />
            </div>
        </div>
    }

<script src="~/Scripts/jquery-ui-1.11.4.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    $(function () {
        $('.date-picker').datepicker({
            changeYear: true,
            inline: true,
            showOtherMonths: true,
            dayNamesMin: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sa'],
            monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie',
                'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'],
            monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun',
                'Iul', 'Aug', 'Sep', 'Oct', 'Noi', 'Dec'],
            nextText: '&rarr;',
            prevText: '&larr;',
            onSelect: function (date) {
                $.get("/Courts/ShowTimes", { dateRes: date, courtId : @Model.IDCourt });
                return false;
            }
        }).datepicker("setDate", new Date());
    })
</script>
